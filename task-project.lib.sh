#!/bin/sh
test "${guard_0416bc0+set}" = set && return 0; guard_0416bc0=-
set -o nounset -o errexit

. ./task.sh
. ./task-go.lib.sh

readonly bootstrap_go=bootstrap/cmd-gobin.go

task_bootstrap__go__gen() { # Generate bootstrap Go code.
  first_call e421e51 || return 0

  go_src=minlib/minlib.go
  url_to_fetch="https://raw.githubusercontent.com/knaka/gobin/main/$bootstrap_go"

  if ! newer "$go_src" --than "$bootstrap_go"
  then
    return 0
  fi

  cat <<EOF > "$bootstrap_go"
// Code generated by gobin/task-project.lib.sh; DO NOT EDIT.

// Latest version is available by running:
//
//   curl --remote-name $url_to_fetch

//go:build ignore

$(sed -E -e 's/^package .*/package main/' <"$go_src")

func main() {
	bootstrapMain()
}
EOF
  
  subcmd_gofmt -w "$bootstrap_go"
}

task_bootstrap__sh__gen() { # Generate bootstrap shell script.
  first_call 902b3c5 || return 0

  task_bootstrap__go__gen

  sh_src=bootstrap/cmd-embedded-go
  sh_dst=bootstrap/cmd-gobin
  url_to_fetch="https://raw.githubusercontent.com/knaka/gobin/main/$sh_dst"

  if ! newer "$sh_src" "$bootstrap_go" --than "$sh_dst"
  then
    return 0
  fi

  # shellcheck disable=SC2046
  line_no_start_marker="$(IFS=:; printf "%s\n" $(grep -E -n "^.+EMBED_FAA58B3" "$sh_src") | head -n 1)"
  # shellcheck disable=SC2046
  line_no_end_marker="$(IFS=:; printf "%s\n" $(grep -E -n "^EMBED_FAA58B3" "$sh_src") | head -n 1)"

  head -n "$line_no_start_marker" < "$sh_src" | sed -E -e "s@https://raw.githubusercontent.com/.*@${url_to_fetch}@" > "$sh_dst"
  cat "$bootstrap_go" >> "$sh_dst"
  tail -n +"$line_no_end_marker" < "$sh_src" >> "$sh_dst"

  chmod 0755 "$sh_dst"
}

task_bootstrap__cmd__gen() { # Generate bootstrap cmd.exe script.
  first_call d818954 || return 0

  task_bootstrap__go__gen

  cmd_src=bootstrap/cmd-embedded-go.cmd
  cmd_dst=bootstrap/cmd-gobin.cmd
  url_to_fetch="https://raw.githubusercontent.com/knaka/gobin/main/$cmd_dst"

  if ! newer "$cmd_src" "$bootstrap_go" --than "$cmd_dst"
  then
    return 0
  fi

  # shellcheck disable=SC2046
  line_no_marker_label="$(IFS=:; printf "%s\n" $(grep -E -n "^:embed_53c8fd5" "$cmd_src") | head -n 1)"

  head -n "$line_no_marker_label" < "$cmd_src" | sed -E -e "s@https://raw.githubusercontent.com/.*@${url_to_fetch}@" > "$cmd_dst"
  cat "$bootstrap_go" >> "$cmd_dst"
}

task_bootstrap__gen() { # Generate bootstrap scripts.
  task_bootstrap__go__gen
  task_bootstrap__sh__gen
  task_bootstrap__cmd__gen
}

task_gen() { # Generate files.
  task_bootstrap__gen
}
